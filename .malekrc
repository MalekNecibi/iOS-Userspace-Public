HISTCONTROL=ignoreboth
shopt -s histappend
export HISTSIZE=1000000
export HISTFILESIZE=5000000

alias grep="grep --color=auto "

# 'clear' alternatives
# ref: https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797

# fully clear old buffer
alias cc='clear ; printf "\033[99B\033[2J";'

# fully clear old buffer, but preserve current command
alias c='clear ; printf "\033[99B\033[2J\033[1F" ; echo -n "${PS1@P}" ; HISTTIMEFORMAT="" history 1 | sed "s/^[ ]*[0-9]\+[ ]*//" ;'

unalias ls 2>/dev/null
alias l='ls -al --color=auto '
alias ll='ls -a -1 --color=auto '

alias alist='activator listeners | grep -i '
alias asend='activator send '
alias aevents='activator events | grep -i '

# copy (nclip = ignore newlines)
alias clip="{ tee /dev/tty | 2>/dev/null pbcopy public.utf8-plain-text ; } "
alias nclip="{ tr -d '\n' | clip ; echo>>/dev/tty; } "

# WIP: auto-exclude from history  (unless already excluded)
# alias histexclude='[[ $EPOCHSECONDS == $(HISTTIMEFORMAT="%s " history 1 | head -n 1 | awk "{ print \$2 }") ]] && history -d -1; '

alias __='2>/dev/null '
alias _='2> >(>&2 grep -v -e "^SubstituteLog: ") '
alias _pbpaste='{ pbpaste 2>/dev/null ; } '
alias _find='2>/dev/null find '

hist(){ fc -ln -1 | sed '1 s/^\s*//'; }
histclip(){ hist | head -c -1 | clip; echo>>/dev/tty; }

#head/tail with default 1
#to customize change -1 to -DEFAULT
h() { head -n "${1:-1}" ; }
t() { tail -n "${1:-1}" ; }

line() { head -n "${1:-1}" | tail -n 1 ; } 
lines() { tail -n +"${1:-1}" | head -n +$((1+"${2:-${1:-0}}"-"${1:-0}")) ; } 

# copy single line to clipboard
n() { line "${1:-1}" | nclip ; }


filza(){ springcuts -r "Open in Filza" -p "$(realpath -s "${1:-$PWD}")" > /dev/null ; } 

# result (0): "on","off"
# error  (1): ""
fsstate(){
    local fs_id
    # clean/escape user input
    fs_id="$(printf "%q" "$1")";

    # Valid Flipswitches...
    # return success iff state changed

    # Invalid Flipswitches...
    # switch-on : always return success (0)
    # switch-off: always return failure (1)

    activator send switch-on."$fs_id";
    if [[ 0 == $? ]] ; then
        # Previously off OR Invalid
        activator send switch-off."$fs_id";
        if [[ 1 == $? ]] ; then
            # Invalid id provided
            return 1;
        fi
        echo "off"
    else
        echo "on"; 
    fi
}

alias plutil='2>&1 plutil '

alias newlines='{ sed G; }'

alias vib='{ activator send libactivator.system.vibrate ; sleep 0.5 ; } '
alias vib3='{ vib;vib;vib; }'

alias sc='springcuts'
notify(){ springcuts -r "Notification" -p "$*"; }

alias got=git

alias ungray='{ activator send libactivator.system.previous-app ; sleep 1 ; springcuts -r "Turn on Color for 15 Minutes" ; } '

# ---- Handy Shortcuts ---- #
# https://jdhao.github.io/2020/10/26/bash_emacs_style_shortcut/

















